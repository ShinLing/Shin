// 有需要這尺寸的裝置,在寫樣式語法
#TOP {
  @include Dn;
}
header{
  nav{
     // 停佇在畫面上方,不隨著畫面滑動而消失
     position: fixed;
     top: 0;
     
     background-color: lightpink;

      //  設定nav專用(區域)變數;vh單位(以裝置的高度*百分比計算,同時顯示框架的高度值)
      //  屬於 nav 寬度% ;高度 px ;背景色(暫)
      height: $NH;
      background-color: lightpink;
  
        // 指向清單li
        li{
          // 將logo與選單設定為垂直排列(一列)float
          // float(浮點對齊)缺點,會自動往上一階層(新圖層),所以,父框架(外框架),若沒有設定高度,系統將會視為不存在
          float: left;
        }
        // 商標
        #Logo{
          // 寬度9等份
          width: $W1 * 9;
          // 文字尺寸,內縮,水平置中
          font-size: $Trem * 2;
          // 內縮:方法1,首行縮排(單行文字)
          text-indent: 30px;
          // 文字水平置中,行距設定(父框架的高度=行距的數值) line-height: 80 * 0.15 +px;
  
          line-height: $NH;
          background-color: darkgrey;
        }
        // 選單
        #Menu{
          // 寬度 1.等份
          width: $W1;
          // 文字水平(行距).垂直(文字對齊--置中)置中
          text-align: center;
          line-height: $NH;
          // 將文字移至裝置之外
          text-indent: -999999px;
          // 背景圖片連結
          background-image: url(../../imgs/icon/0001.png);
          // 背景圖片對齊(定位點)
          background-position: center;
          // 背景圖片取消重覆顯示
          background-repeat:  no-repeat;
          // 背景圖片尺寸 auto自動 cover(背景圖片小於容器時,放大圖片至容器大小並填滿;背景圖片大於容器時,縮小圖片至容器大小並填滿;缺點,容器的長寬比例與背景圖片的長寬比例不合時,會出現背景圖片失真)contain(背景圖片大於容器時,縮小至容器內呈現,會留邊界)
          background-size: contain;
        }
  
        .clear{
          clear:both;
        }
  
        
        #Portfolio, #About, #Project, #Connection {
          @extend %Dn;
         }
       }
      //  輪播圖片 超小與小裝置  100% X 280px(圖片以大尺寸1920*600為基礎計算)
      //  vw(以裝置的寬為寬度) vh(以裝置的高為高度)
      #Bannerbox {
        width: $W10;
        // 超出範圍設定,能滑動x軸,讓圖片在框架中左右滑動
        overflow-x: hidden;
        background-color: cadetblue;

        //  導覽固定在上方,會形成浮動狀態,故廣告區上方要用 外間距設定為高度
        margin: {
            top: $NH;
        }
        // 相對定位(移動物件的定位點)--重新定位
    position: relative;

    // 輪播圖左右按鈕
    > .Arrow {
        width: $WPer * 10;
        // 相對定位
        position: absolute;
        // 層級
        z-index: 5;
        // 文字尺寸
        font-size: $Trem * 1.8;
        // 水平置中
        text-align: center;
        // 垂直置中
        line-height: 120px;
        // 設定為50% 位置
        top: 50%;
        // 外間距
        margin: {
            top: -60px;
        }
        display: flex;

        > .arrow {
          width: $WPer * 0.5;
          height: 120px;
          // 圓角矩形
          border-radius: 20px;
          background-color: rgb(54, 46, 46);
          // 定位點 停佇
          position: fixed;
        }

        > .Larrow {
          // 靠左
          left: 10px;
        }

        > .Rarrow {
          // 靠右
          right: 10px;
        }
    }

     // 輪播區 按鈕
     > .RadioBox {
      width: $WPer * 10;
      
      > input {
         @include Dn;
     }

     // 控制按鈕
     > .Controls_Visible {
         width: $WPer * 10;
         position: absolute;
         text-align: center;
         bottom: 12px;

         > label {
         // 顯示方式 行內區塊
         display: inline-block;
         //  寬度與高度 同數值為正
         width: 10px;
         height: 10px;
         // 物件的左右間距
         margin: 0 5px;
         // 背景顏色
         background-color: wheat;
         // 圓角 正圓
         border-radius:  50%;
         // 框線
         border: 2px solid white; 
         }
     }

    // 轉換控制按鈕顏色「~」連結同層元素,形成連動
    > input[type="radio"]:nth-of-type(1):checked
        ~ .ImgBox
        > a
        > .SmallImg {
         transform: translateX(0vw)
        }
    > input[type="radio"]:nth-of-type(2):checked
        ~ .ImgBox
        > a
        > .SmallImg {
         transform: translateX(-100vw)
        }
    > input[type="radio"]:nth-of-type(3):checked
        ~ .ImgBox
        > a
        > .SmallImg {
        transform: translateX(-200vw)
        }
    > input[type="radio"]:nth-of-type(4):checked
        ~ .ImgBox
        > a
        > .SmallImg {
        transform: translateX(-300vw)
        } 
    > input[type="radio"]:nth-of-type(5):checked
        ~ .ImgBox
        > a
        > .SmallImg {
        transform: translateX(-4000vw)
        }
        

 }
    
        }
  }
      
  footer {
     .HrlINE {
      //  上邊界與下邊界,讓main 與 footer 有點區隔
      margin: {
        // top: 15px;
      }
     }
  } 